{"version":3,"sources":["helper.js","components/square.js","components/board.js","components/header.js","components/footer.js","components/game.js","App.js","reportWebVitals.js","index.js"],"names":["calculateWinner","squares","lines","i","length","a","b","c","style","background","border","fontSize","fontWeight","cursor","outline","Square","value","onClick","width","height","margin","display","gridTemplate","paddingTop","paddingBottom","Board","useState","map","square","index","textAlign","color","maxWidth","Header","Footer","winner","next","Game","Array","fill","gameState","setGameState","xIsNext","setXIsNext","ResetButton","marginLeft","marginTop","useEffect","console","log","alert","boardCopy","App","document","title","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7fa31157.chunk.js","sourcesContent":["const calculateWinner = (squares) => {\r\n    const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6],\r\n    ];\r\n\r\n    for (let i=0; i< lines.length; i++) {\r\n        let [a, b, c] = lines[i];\r\n        if (squares[a] !== \"\" && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n            return squares[a];\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\nexport default calculateWinner;","import React, { useState } from 'react';\r\n\r\nconst style = {\r\n  background: 'white',\r\n  border: '2px solid black',\r\n  fontSize: '24px',\r\n  fontWeight: '100',\r\n  cursor: 'pointer',\r\n  outline: 'none',\r\n}\r\nconst Square = ({value, onClick}) => {\r\n    return (\r\n        <button style = {style} onClick = {onClick}>\r\n          {value}\r\n        </button>\r\n      );\r\n}\r\n\r\nexport default Square;\r\n","import React, { useState } from 'react';\r\nimport Square from './square';\r\n\r\nconst style = {\r\n  width: '240px',\r\n  height: '240px',\r\n  margin: '0 auto',\r\n  display: 'grid',\r\n  gridTemplate: 'repeat(3, 1fr) / repeat(3, 1fr)',\r\n  paddingTop: '30px',\r\n  paddingBottom: '30px'\r\n}\r\n\r\nconst Board = ({squares, onClick}) => {\r\n    const [player, setPlayer] = useState('X')\r\n    const status = 'Next player: ' + player;\r\n    return (\r\n      <div style={style}>\r\n        {squares.map((square, index) => \r\n          <Square key={index} value={square} onClick = {() => onClick(index)} />\r\n        )}\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Board;","import React from 'react';\r\n\r\nconst style = {\r\n    textAlign: 'center',\r\n    margin: '0 auto',\r\n    paddingTop: \"25px\",\r\n    paddingBottom: '25px',\r\n    color: 'white',\r\n    background: 'orange',\r\n    fontWeight: '500',\r\n    fontSize: '30px',\r\n    maxWidth: '500px'\r\n}\r\nconst buttonStyle = {\r\n    background : 'orange',\r\n    border: 'none',\r\n    color: 'white',\r\n    fontSize: '20px',\r\n    float: 'right'\r\n}\r\nconst Header = () => {\r\n\r\n    return <div style = {style}>\r\n            Hello there!\r\n        </div>\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst style = {\r\n    textAlign: 'center',\r\n    margin: '0 auto',\r\n    paddingTop: \"25px\",\r\n    paddingBottom: '25px',\r\n    color: 'white',\r\n    background: 'orange',\r\n    fontWeight: '500',\r\n    fontSize: '30px',\r\n    maxWidth: '500px'\r\n}\r\nconst Footer = ({winner, next}) => {\r\n    if(winner) {\r\n        return <div style = {style}> \r\n        {winner} won the Game!\r\n    </div>\r\n    }\r\n    return <div style = {style}> \r\n        Next is {next}\r\n    </div>\r\n}\r\n\r\nexport default Footer;","import React, { useEffect, useState } from 'react';\r\nimport calculateWinner from '../helper';\r\nimport Board from './board';\r\nimport Header from './header';\r\nimport Footer from './footer';\r\n\r\nconst Game = () => {\r\n\r\n    const [gameState, setGameState] = useState(Array(9).fill(null));\r\n    const [xIsNext, setXIsNext] = useState(true);\r\n    const winner = calculateWinner(gameState);\r\n\r\n    const handleClick = (i) => {\r\n      const boardCopy = [...gameState];\r\n      \r\n      console.log(winner)\r\n      // If user click an occupies square or if game is won, return\r\n      if(winner) {\r\n        alert(\"Game is over \" + winner + \" won the game, press play again.\");\r\n        return;\r\n      }\r\n      if(boardCopy[i]) {\r\n        alert(\"Invalid move! already marked.\");\r\n        return;\r\n      }\r\n      // Put and X or O in the clicked square\r\n      boardCopy[i] = xIsNext ? 'X' : 'O';\r\n      setGameState(boardCopy);\r\n      setXIsNext(!xIsNext);\r\n    }\r\n    // comment\r\n    const ResetButton = (winner) => {\r\n      if(winner) {\r\n        return <button style={{marginLeft: '48%', marginTop: '20px'}}\r\n         onClick = {() => {\r\n           setGameState(Array(9).fill(null))\r\n          winner = null;\r\n        }}> Play Again! </button>\r\n      }\r\n      return null;\r\n    } \r\n    useEffect(() => {\r\n      console.log(gameState);\r\n      if(winner) return;\r\n      for(let i=0; i<gameState.length; ++i) {\r\n        if(gameState[i] == null) return;\r\n      }\r\n      alert(\"Game Over!\");\r\n      setGameState(Array(9).fill(null));\r\n    },[gameState]);\r\n    \r\n    return (\r\n        <>\r\n          <Header/>\r\n          <Board squares = {gameState} onClick = {handleClick}/>\r\n          <Footer winner = {winner} next = {xIsNext ? 'X': 'O'}/>\r\n          <ResetButton></ResetButton>\r\n        </>\r\n      );\r\n}\r\n\r\nexport default Game;","import React, { useEffect } from 'react';\nimport Game from './components/game'\n\nconst App = () => {\n  \n  useEffect(() => {\n    document.title = \"Tic-Tac-Toe\"\n  }, [])\n\n  return <Game/>\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}